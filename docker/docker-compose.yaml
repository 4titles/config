x-common-variables: &common-variables
  POSTGRES_DB: ${DB_DATABASE}
  POSTGRES_USER: ${DB_USERNAME}
  POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
  REDIS_HOST: ${REDIS_HOST:-redis}
  REDIS_PORT: ${REDIS_PORT:-6379}
  REDIS_TTL: ${REDIS_TTL:-8600}
  REDIS_USERNAME: ${REDIS_USERNAME:-default}
  REDIS_PASSWORD: ${REDIS_PASSWORD}
  REDIS_URL: redis://${REDIS_USERNAME}:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}
  MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
  MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
  MINIO_SERVER_URL: ${MINIO_SERVER_URL:-http://${MINIO_ENDPOINT:-minio}:${MINIO_PORT:-9000}}
  MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
  MINIO_DEFAULT_BUCKET: ${MINIO_DEFAULT_BUCKET:-uploads}
  ELASTICSEARCH_NODE: ${ELASTICSEARCH_NODE:-http://elasticsearch:9200}
  ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME:-elastic}
  ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD:-elastic_pass}

services:
  postgres:
    image: postgis/postgis:14-3.3
    container_name: titles-pgsql
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - titles-network
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: titles-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - titles-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  redis:
    image: redis:alpine
    container_name: titles-redis
    networks:
      - titles-network
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --save 60 1
      --loglevel warning
      --bind 0.0.0.0
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  redis-insight:
    image: redis/redisinsight:latest
    container_name: titles-redis-insight
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_data:/db
    networks:
      - titles-network
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  minio:
    image: bitnami/minio:latest
    container_name: titles-minio
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS:-uploads:public}
    volumes:
      - minio_data:/bitnami/minio/data
    networks:
      - titles-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G

  nestjs:
    build:
      context: ../../backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: titles-backend
    ports:
      - "${BACKEND_HOST_PORT:-3000}:3000"
    environment:
      <<: *common-variables
      PORT: ${BACKEND_HOST_PORT:-3000}
      DATABASE_URL: postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE}
      NODE_ENV: ${NODE_ENV:-development}
      REDIS_CONNECTION_RETRY_DELAY: ${REDIS_CONNECTION_RETRY_DELAY:-2000}
      REDIS_MAX_RETRIES_PER_REQUEST: ${REDIS_MAX_RETRIES_PER_REQUEST:-5}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
      MINIO_DEFAULT_BUCKET: ${MINIO_DEFAULT_BUCKET:-uploads}
      ELASTICSEARCH_NODE: ${ELASTICSEARCH_NODE:-http://elasticsearch:9200}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME:-elastic}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD:-changeme}
    volumes:
      - ../../backend/src:/usr/src/app/src
      - ../../backend/node_modules:/usr/src/app/node_modules
    networks:
      - titles-network
    cap_add:
      - SYS_ADMIN
    shm_size: "4gb"
    security_opt:
      - seccomp=unconfined
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.5"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --spider -q http://localhost:${BACKEND_HOST_PORT}/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:stable
    container_name: titles-nginx
    ports:
      - "80:80"
    networks:
      - titles-network
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../models:/usr/share/nginx/html/models:ro
    depends_on:
      nestjs:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 60s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: titles-grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-adminpassword}
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    networks:
      - titles-network
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: titles-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD:-elastic_pass}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_PORT:-9200}:9200"
      - "${ELASTICSEARCH_TCP_PORT:-9300}:9300"
    networks:
      - titles-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: titles-kibana
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_NODE}
      - KIBANA_SERVICE_TOKEN=${KIBANA_SERVICE_TOKEN}
    volumes:
      - ../kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "${KIBANA_PORT:-5601}:5601"
    networks:
      - titles-network
    depends_on:
      - elasticsearch
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G

networks:
  titles-network:
    name: titles-network
    driver: bridge

volumes:
  postgres_data:
    name: titles-postgres-data
  pgadmin_data:
    name: titles-pgadmin-data
  redis_data:
    name: titles-redis-data
  redis_insight_data:
    name: titles-redis-insight-data
  grafana_data:
    name: titles-grafana-data
  minio_data:
    name: titles-minio-data
  elasticsearch_data:
    name: titles-elasticsearch-data
